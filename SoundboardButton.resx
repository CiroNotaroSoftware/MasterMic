<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>